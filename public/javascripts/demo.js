let samples = {
  xsmall: [ 6, 4, 9, 1, 2, 3, 10, 7, 8, 5 ],
  small:  [ 40, 44, 34, 33, 18, 22, 39, 49, 36, 21, 2, 26, 37, 5, 25, 4, 48, 13, 38, 11, 32, 14, 20, 42, 3, 16, 10, 30, 31, 47, 50, 1, 24, 8, 19, 35, 27, 17, 43, 15, 7, 45, 46, 41, 6, 23, 9, 29, 12, 28 ],
  medium: [ 16, 1, 76, 97, 4, 40, 70, 17, 50, 84, 28, 35, 43, 91, 15, 49, 23, 51, 54, 44, 39, 65, 34, 88, 47, 66, 36, 90, 12, 62, 56, 38, 67, 21, 22, 30, 94, 31, 83, 19, 60, 58, 89, 72, 92, 63, 14, 18, 11, 2, 64, 42, 79, 73, 26, 57, 86, 48, 32, 6, 85, 81, 96, 87, 25, 98, 46, 69, 37, 82, 80, 3, 59, 13, 7, 53, 75, 20, 24, 27, 29, 9, 8, 71, 100, 61, 52, 78, 77, 10, 68, 95, 99, 55, 93, 41, 5, 33, 45, 74 ],
  large:  [ 297, 815, 457, 398, 690, 68, 986, 300, 735, 391, 50, 82, 199, 487, 697, 198, 939, 290, 416, 307, 934, 724, 379, 327, 463, 94, 69, 799, 591, 89, 320, 746, 387, 106, 914, 185, 921, 517, 609, 7, 430, 661, 151, 345, 727, 992, 878, 362, 480, 495, 634, 21, 54, 120, 856, 124, 589, 440, 279, 826, 513, 36, 670, 490, 312, 662, 755, 693, 590, 107, 639, 373, 211, 264, 213, 378, 246, 481, 113, 692, 944, 565, 15, 30, 218, 150, 968, 1, 207, 195, 962, 132, 976, 948, 650, 575, 734, 942, 522, 329, 628, 918, 625, 145, 995, 372, 260, 652, 850, 192, 855, 961, 528, 521, 854, 867, 225, 363, 870, 239, 886, 405, 649, 277, 708, 897, 210, 88, 232, 281, 510, 200, 235, 546, 215, 616, 24, 228, 23, 488, 459, 131, 862, 559, 159, 555, 42, 237, 417, 851, 142, 547, 518, 446, 249, 301, 683, 659, 101, 73, 34, 972, 322, 64, 251, 828, 74, 613, 354, 169, 612, 240, 352, 883, 56, 462, 437, 443, 922, 55, 685, 484, 395, 381, 534, 208, 412, 423, 847, 748, 166, 414, 361, 284, 174, 698, 161, 344, 736, 98, 569, 596, 830, 750, 984, 41, 647, 478, 499, 242, 397, 536, 259, 125, 635, 772, 168, 849, 651, 841, 90, 87, 394, 485, 304, 925, 501, 209, 458, 136, 411, 258, 179, 806, 792, 527, 905, 359, 190, 135, 853, 268, 231, 900, 323, 712, 585, 130, 70, 220, 747, 370, 319, 658, 660, 439, 786, 920, 505, 842, 823, 638, 974, 785, 206, 935, 250, 508, 116, 987, 43, 353, 324, 102, 641, 10, 133, 928, 256, 450, 758, 221, 4, 576, 657, 388, 464, 560, 128, 428, 155, 700, 985, 382, 674, 809, 877, 201, 194, 507, 672, 594, 422, 879, 882, 143, 3, 367, 611, 342, 306, 759, 631, 376, 754, 778, 930, 568, 645, 147, 604, 880, 399, 119, 776, 857, 868, 637, 607, 742, 581, 275, 769, 167, 563, 874, 219, 551, 684, 152, 996, 989, 426, 163, 924, 966, 369, 92, 79, 959, 236, 17, 837, 138, 451, 127, 978, 804, 40, 386, 44, 707, 654, 695, 765, 184, 535, 540, 11, 403, 392, 226, 733, 732, 295, 940, 438, 967, 745, 860, 911, 743, 686, 602, 825, 597, 960, 617, 276, 78, 477, 699, 666, 752, 489, 836, 118, 28, 907, 261, 671, 390, 875, 243, 53, 244, 519, 945, 350, 486, 466, 351, 126, 60, 572, 739, 689, 656, 840, 204, 621, 429, 497, 520, 332, 588, 491, 91, 111, 476, 265, 833, 202, 678, 600, 550, 973, 864, 217, 360, 193, 27, 415, 339, 146, 406, 601, 292, 66, 16, 472, 787, 305, 756, 20, 182, 1000, 427, 952, 937, 835, 624, 310, 109, 904, 713, 599, 104, 404, 610, 965, 355, 461, 408, 144, 642, 800, 931, 330, 63, 606, 705, 222, 722, 285, 186, 990, 22, 383, 896, 571, 997, 767, 303, 333, 728, 789, 431, 714, 334, 630, 273, 626, 567, 822, 784, 580, 139, 885, 262, 291, 315, 337, 797, 764, 768, 165, 893, 377, 731, 280, 492, 162, 269, 9, 294, 448, 191, 715, 675, 325, 953, 401, 932, 374, 348, 316, 980, 6, 807, 958, 46, 99, 773, 32, 861, 947, 592, 780, 108, 105, 579, 529, 557, 62, 812, 971, 679, 798, 331, 309, 321, 760, 346, 65, 543, 640, 19, 512, 629, 402, 160, 811, 946, 410, 848, 25, 121, 763, 216, 711, 317, 76, 582, 673, 435, 694, 623, 562, 881, 923, 479, 289, 368, 643, 951, 449, 85, 777, 515, 744, 894, 876, 982, 832, 227, 566, 524, 794, 71, 919, 801, 544, 482, 970, 782, 347, 509, 212, 721, 498, 936, 214, 938, 696, 541, 257, 238, 100, 444, 196, 618, 26, 158, 813, 975, 311, 2, 13, 122, 171, 717, 775, 341, 318, 187, 302, 665, 903, 197, 716, 224, 296, 205, 729, 254, 173, 803, 533, 892, 245, 420, 156, 910, 949, 18, 396, 751, 496, 473, 526, 506, 247, 454, 619, 802, 653, 831, 859, 164, 72, 445, 950, 595, 927, 979, 805, 871, 929, 266, 808, 530, 749, 843, 954, 545, 538, 365, 824, 913, 548, 955, 725, 632, 963, 83, 781, 511, 170, 796, 691, 335, 468, 899, 537, 112, 80, 149, 539, 442, 827, 865, 175, 141, 467, 516, 49, 622, 389, 241, 941, 583, 271, 709, 605, 418, 177, 887, 839, 663, 115, 86, 682, 483, 523, 906, 888, 58, 838, 140, 873, 933, 57, 81, 255, 701, 45, 338, 762, 29, 465, 117, 668, 993, 59, 233, 380, 908, 573, 494, 203, 586, 84, 134, 299, 561, 471, 620, 293, 252, 680, 424, 999, 829, 5, 172, 31, 366, 38, 96, 558, 474, 48, 718, 552, 371, 957, 283, 37, 234, 278, 998, 470, 598, 852, 525, 774, 52, 810, 33, 153, 584, 253, 123, 574, 286, 503, 47, 956, 188, 407, 863, 793, 433, 326, 475, 615, 866, 452, 51, 313, 818, 704, 869, 229, 35, 531, 844, 655, 375, 148, 349, 39, 814, 969, 455, 603, 189, 493, 178, 834, 587, 356, 669, 553, 12, 795, 916, 287, 223, 664, 298, 434, 676, 738, 500, 819, 788, 964, 702, 137, 821, 593, 726, 8, 846, 737, 977, 154, 988, 554, 991, 436, 820, 282, 817, 532, 898, 419, 230, 687, 114, 891, 432, 384, 577, 288, 895, 274, 667, 902, 790, 578, 912, 314, 340, 157, 872, 103, 761, 740, 703, 994, 460, 421, 845, 981, 889, 75, 644, 633, 364, 681, 719, 816, 267, 909, 181, 504, 385, 343, 983, 646, 93, 502, 688, 180, 915, 720, 110, 456, 95, 648, 176, 570, 779, 14, 636, 858, 270, 564, 409, 425, 723, 514, 614, 393, 400, 549, 757, 556, 308, 469, 943, 542, 766, 61, 263, 783, 248, 453, 97, 706, 77, 890, 730, 884, 447, 753, 627, 67, 791, 741, 917, 413, 336, 183, 272, 357, 901, 328, 358, 926, 710, 608, 771, 770, 441, 677, 129 ],
  xlarge: [ 6, 2, 8, 4, 3, 10, 5, 1, 7, 9 ]
};


function getFormElements() {
  return [
    document.getElementById('xsmall'),
    document.getElementById('small'),
    document.getElementById('medium'),
    document.getElementById('large'),
    document.getElementById('xlarge')
  ]
}

function toggleElementsDisabled(elements, disable) {
  elements.forEach(element => {
    element.disabled = disable;
  });
}

function toggleElementsChecked(elements, check) {
  elements.forEach(element => {
    element.checked = check;
  });
}

function setText(name, text) {
  document.getElementById(`${ name }Input`).classList.add('hide');
  document.getElementById(`${ name }Input`).classList.remove('show');
  document.getElementById(`${ name }Text`).innerText = `${ text }`;
  document.getElementById(`${ name }Text`).classList.add('show');
  document.getElementById(`${ name }Text`).classList.remove('hide');
}

function resetDemo() {
  let elements = getFormElements();
  toggleElementsDisabled(elements, false);
  toggleElementsChecked(elements, true);
  elements.forEach(element => {
    document.getElementById(`${ element.name }Input`).classList.remove('hide');
    document.getElementById(`${ element.name }Input`).classList.add('show');
    document.getElementById(`${ element.name }Text`).classList.remove('show');
    document.getElementById(`${ element.name }Text`).classList.add('hide');
  });
}

function wrapAlgo(algo) {
  let elements = getFormElements();
  toggleElementsDisabled(elements, true);

  elements.forEach(element => {
    if (element.checked) {
      console.log('run', element.name);

      let start = performance.now();
      algo(samples[element.name]);
      let end = performance.now();
      setText(element.name, end - start);
    }
  });

  // if (elements.xsmall.checked) {
  //   console.log('run xsmall');

  //   let start = performance.now();
  //   algo(xsmallSample);
  //   let end = performance.now();
  //   setText('xsmall', end - start);
  // }

  // if (elements.small.checked) {
  //   console.log('run small');

  //   let start = performance.now();
  //   algo(smallSample);
  //   let end = performance.now();
  //   setText('small', end - start);
  // }

  // if (elements.medium.checked) {
  //   console.log('run medium');

  //   let start = performance.now();
  //   algo(mediumSample);
  //   let end = performance.now();
  //   setText('medium', end - start);
  // }

  // if (elements.large.checked) {
  //   console.log('run large');

  //   let start = performance.now();
  //   algo(largeSample);
  //   let end = performance.now();
  //   setText('large', end - start);
  // }

  // if (elements.xlarge.checked) {
  //   console.log('run xlarge');

  //   let start = performance.now();
  //   algo(xlargeSample);
  //   let end = performance.now();
  //   setText('xlarge', end - start);
  // }
}
